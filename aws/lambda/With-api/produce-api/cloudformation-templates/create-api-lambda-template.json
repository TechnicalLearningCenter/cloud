{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "product component service",
  "Parameters": {
    "LambdaMemorySize": {
      "Type": "Number",
      "Default": "512"
    },
    "LambdaTimeout": {
      "Type": "Number",
      "Default": "30"
    },
    "LambdaCode": {
      "Type": "String",
      "Default": "exports.handler = function(event, context) {context.succeed();};"
    },
    "EnvironmentName": {
      "Type": "String",
      "Default":"Dev"
    },
    "CertificateArn": {
      "Type": "String"
    },
    "ApiDomainName": {
      "Type": "String",
      "Default":"devl.us.e01.c01.technicallearningcenter.com"
    }
  },
  "Resources": {
    "enterpriseComponentApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0.0",
            "title": "product-component-service"
          },
          "basePath": "/",
          "schemes": [
            "https"
          ],
          "paths": {
            "user/{userId}/roles": {
              "get": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "security": [
                  {
                    "ProductComponentAuthorizer": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "responses": {
                    ".*": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "productAuthorizedRoles",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  },
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            }
          },
          "securityDefinitions": {
            "productComponentAuthorizer": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "custom",
              "x-amazon-apigateway-authorizer": {
                "authorizerResultTtlInSeconds": 3600,
                "authorizerUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "productComponentAuthorization",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                },
                "type": "TOKEN"
              }
            }
          }

        }
      }
    },
    "productAuthorizedRoles": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Environment": {
          "Variables": {
            "NODE_ENV": {
              "Ref": "EnvironmentName"
            }
          }
        },
        "Code": {
          "ZipFile": {
            "Ref": "LambdaCode"
          }
        },
        "FunctionName": "product-rbac-authorized-roles",
        "Handler": "index.userRoles",
        "Role": "arn:aws:iam::292661884468:role/handleRequestMethodLambdaRole",
        "Runtime": "nodejs6.10",
        "Timeout": {
          "Ref": "LambdaTimeout"
        },
        "MemorySize": {
          "Ref": "LambdaMemorySize"
        }
      }
    },
    "productAuthorizedRolesPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "productAuthorizedRoles",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": "product-rbac-authorized-roles",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "enterpriseComponentApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "productComponentAuthorization": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Environment": {
          "Variables": {
            "NODE_ENV": {
              "Ref": "EnvironmentName"
            }
          }
        },
        "Code": {
          "ZipFile": {
            "Ref": "LambdaCode"
          }
        },
        "FunctionName": "productComponentAuthorization",
        "Handler": "index.authorizeEnterpriseComponent",
        "Role": "arn:aws:iam::292661884468:role/handleRequestMethodLambdaRole",
        "Runtime": "nodejs6.10",
        "Timeout": {
          "Ref": "LambdaTimeout"
        },
        "MemorySize": {
          "Ref": "LambdaMemorySize"
        }
      }
    },
    "productComponentAuthorizationPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "productComponentAuthorization",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": "productComponentAuthorizationPermission",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "enterpriseComponentApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "enterpriseComponentApiDomain": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {

        "DomainName": {
          "Fn::Join": [
            "",
            [
              "product-comp.",
              {
                "Ref": "ApiDomainName"
              }
            ]
          ]
        }
      }
    },
    "enterpriseComponentApiRoute53": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ApiDomainName"
              },
              "."
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            ".",
            [
              "product-comp",
              {
                "Ref": "ApiDomainName"
              }
            ]
          ]
        },
        "Type": "A"
      },
      "DependsOn": "enterpriseComponentApiDomain"
    },
    "enterpriseComponentApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "enterpriseComponentApi"
        }
      },
      "DependsOn": "enterpriseComponentApi"
    },
    "enterpriseComponentApiStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "StageName": "v1",
        "RestApiId": {
          "Ref": "enterpriseComponentApi"
        },
        "DeploymentId": {
          "Ref": "enterpriseComponentApiDeployment"
        },
        "Tags": [
          {
            "Key": "component",
            "Value": "product_sales_activations"
          },
          {
            "Key": "Name",
            "Value": "enterprise-component-service"
          }
        ]
      },
      "DependsOn": [
        "enterpriseComponentApi",
        "enterpriseComponentApiDeployment"
      ]
    },
    "enterpriseComponentApiBasePath": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "BasePath": "",
        "Stage": "v1",
        "DomainName": {
          "Ref": "enterpriseComponentApiDomain"
        },
        "RestApiId": {
          "Ref": "enterpriseComponentApi"
        }
      },
      "DependsOn": [
        "enterpriseComponentApi",
        "enterpriseComponentApiDeployment",
        "enterpriseComponentApi"
      ]
    }
  }
}
